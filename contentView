//
//  ContentView.swift
//  Awise
//
//  Created by Harry Chen on 9/26/22.
//

import SwiftUI
import WebKit

struct ContentView: View {
    
    var body: some View {
        NavigationView{
            forgetPassword()
        }
    }
}

struct forgetPassword: View{
    
    @State var username: String = ""
    
    var body: some View{
        VStack(alignment: .leading) {
                        
            Spacer()
                        
            Text("Reset your password")
                .font(.title)
                .fontWeight(.bold)
                .padding(.bottom)
                        
            Text("Please enter the email address associated with your account. Weâ€™ll send you an email with instructions on how to reset your password.")
                .font(.subheadline)
                .fontWeight(.medium)
                .multilineTextAlignment(.leading)

            Spacer()
                        
            Text("Email")
                .fontWeight(.semibold)
                .foregroundColor(Color.black)
                .font(.headline)
                .padding(.bottom)
                        
            GroupBox() {
                TextField("Enter your email address", text: $username)
            }
            .padding(.bottom)
                        
            //send email to 'username' email address
            NavigationLink(destination: Verification(email: $username)){
                ZStack{
                    Capsule()
                        .foregroundColor(.blue)
                        .frame(width: 150, height: 50)
                    Text("Send Email")
                        .font(.headline)
                        .fontWeight(.semibold)
                        .foregroundColor(/*@START_MENU_TOKEN@*/.white/*@END_MENU_TOKEN@*/)
                }
            }
            Spacer()
        }
        .toolbar{
            ToolbarItemGroup(placement:.navigationBarTrailing){
                Image("Awise Image Header")
                    .resizable()
                    .scaledToFit()
                    .frame(width: 90, height: 90)
            }
        }
        .padding()
    }
}

struct CodeView: View{
    var code: String
    var body: some View{
        VStack(spacing: 10){
            Text(code)
                .foregroundColor(.black)
                .fontWeight(.bold)
                .font(.title2)
                .frame(height:45)
            Capsule()
                .fill(Color.gray.opacity(0.5))
                .frame(height:4)
        }
    }
}

struct Verification: View{
    
    @Binding var email: String
    @ObservedObject var loginData = LoginViewMode()
    @Environment(\.presentationMode) var present
    var body: some View{
        VStack(alignment: .leading){
            
            Spacer()
            
            Text("Check your email")
                .font(.title)
                .fontWeight(.bold)
                .padding(.bottom)
            
            Text("Verification code to your email address:")
                .font(.subheadline)
                .fontWeight(.medium)
                .foregroundColor(Color.gray)
                .multilineTextAlignment(.leading)
                .padding(.bottom)
                
            
            Text(email)
                .font(.subheadline)
                .fontWeight(.medium)
                .multilineTextAlignment(.leading)
                .padding(.bottom)
            
            Spacer()
            
            HStack(spacing:15){
                ForEach(0..<6, id: \.self){index in
                    //displaying code
                    CodeView(code:getCodeAtIndex(index: index))
                }
            }
            .padding(.bottom, 50.0)
            
            Spacer(minLength: 0)
            
            HStack(spacing: 6){
                Text("Didn't receive code?")
                    .foregroundColor(.gray)
                Button(action: {}) {
                    Text("Request Again")
                        .fontWeight(.bold)
                        .foregroundColor(.black)
                }
            }
            .padding()
            NavigationLink(destination: ResetPassword()) {
                ZStack{
                    Capsule()
                        .foregroundColor(.blue)
                        .frame(width: 150, height: 50)
                    Text("Verify")
                        .font(.headline)
                        .fontWeight(.semibold)
                        .foregroundColor(.white)
                }
            }
            CustomNumberPad(value: $loginData.code, isVerify: true)
        }
        .toolbar{
            ToolbarItemGroup(placement:.navigationBarTrailing){
                Image("Awise Image Header")
                    .resizable()
                    .scaledToFit()
                    .frame(width: 90, height: 90)
            }
        }
        .cornerRadius(20)
        .padding()
    }
    
    func getCodeAtIndex(index: Int) -> String{
        if loginData.code.count > index{
            let start = loginData.code.startIndex
            let current = loginData.code.index(start, offsetBy: index)
            return String(loginData.code[current])
        }
        return ""
    }
}


struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}
